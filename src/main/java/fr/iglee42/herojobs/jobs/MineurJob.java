package fr.iglee42.herojobs.jobs;import fr.iglee42.herojobs.utils.Job;import org.bukkit.Material;import java.util.HashMap;import java.util.Map;public class MineurJob extends Job {    public MineurJob() {        super("Mineur", 20);    }    @Override    public void init() {       initBreak();       initCook();        super.init();    }    @Override    public void initBreak() {        super.initBreak();        for (int i = 0;i <= 4 ; i++){            Map<Material,Integer> maps = new HashMap<>();            maps.put(Material.STONE,1);            maps.put(Material.COAL_ORE,2);            this.getBreakBlockXp().put(i,maps);        }        for (int i = 5;i <= 9 ; i++){            Map<Material,Integer> maps = new HashMap<>();            maps.put(Material.COAL_ORE,1);            maps.put(Material.REDSTONE_ORE,3);            maps.put(Material.LAPIS_ORE,2);            maps.put(Material.DIAMOND_ORE,7);            this.getBreakBlockXp().put(i,maps);        }        for (int i = 10; i <= 14; i++){            Map<Material,Integer> maps = new HashMap<>();            maps.put(Material.COAL_ORE,1);            maps.put(Material.REDSTONE_ORE,3);            maps.put(Material.LAPIS_ORE,3);            maps.put(Material.DIAMOND_ORE,6);            maps.put(Material.EMERALD_ORE,10);            this.getBreakBlockXp().put(i,maps);        }        for (int i = 15; i < 20; i++){            Map<Material,Integer> maps = new HashMap<>();            maps.put(Material.COAL_ORE,1);            maps.put(Material.REDSTONE_ORE,2);            maps.put(Material.LAPIS_ORE,4);            maps.put(Material.DIAMOND_ORE,5);            maps.put(Material.EMERALD_ORE,5);            this.getBreakBlockXp().put(i,maps);        }    }    @Override    public void initCook() {        super.initCook();        for (int i = 0;i <= 4 ; i++){            Map<Material,Integer> maps = new HashMap<>();            maps.put(Material.IRON_INGOT,3);            maps.put(Material.GOLD_INGOT,5);            this.getCookXp().put(i,maps);        }        for (int i = 5;i <= 9 ; i++){            Map<Material,Integer> maps = new HashMap<>();            maps.put(Material.IRON_INGOT,2);            maps.put(Material.GOLD_INGOT,4);            this.getCookXp().put(i,maps);        }        for (int i = 10; i <= 14; i++){            Map<Material,Integer> maps = new HashMap<>();            maps.put(Material.IRON_INGOT,2);            maps.put(Material.GOLD_INGOT,3);            this.getCookXp().put(i,maps);        }        for (int i = 15; i < 20; i++){            Map<Material,Integer> maps = new HashMap<>();            maps.put(Material.IRON_INGOT,2);            maps.put(Material.GOLD_INGOT,2);            this.getCookXp().put(i,maps);        }    }}